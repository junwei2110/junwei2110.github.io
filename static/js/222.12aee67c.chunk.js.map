{"version":3,"file":"static/js/222.12aee67c.chunk.js","mappings":"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","sources":["Components/Connect/index.tsx","userInput.ts"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { AiFillLinkedin, AiOutlineMail, AiOutlineReddit, AiOutlineTwitter } from 'react-icons/ai';\r\nimport { ImCross } from 'react-icons/im';\r\nimport { send } from '@emailjs/browser';\r\n\r\nimport \"./styles.css\";\r\nimport { linkedinUrl, redditUrl, twitterUrl } from '../../userInput';\r\n\r\nexport default function Connect() {\r\n\r\n    const [emailModal, setEmailModal] = useState(false);\r\n\r\n    const handleModal = (open: boolean) => {\r\n        if (open) {\r\n            setEmailModal(true);\r\n            document.body.style.overflow = \"hidden\";\r\n        } else {\r\n            setEmailModal(false);\r\n            document.body.style.overflow = \"auto\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"connect-background\"}>\r\n                <div className={\"connect-background-icon-container\"}>\r\n                    <a href={linkedinUrl}>\r\n                        <AiFillLinkedin size={100} color={\"black\"} style={{marginRight: \"2vw\"}} />\r\n                    </a>\r\n                    <a href={redditUrl}>\r\n                        <AiOutlineReddit size={100} color={\"black\"} style={{marginRight: \"2vw\"}} />\r\n                    </a>\r\n                    <a href={twitterUrl}>\r\n                        <AiOutlineTwitter size={100} color={\"black\"} style={{marginRight: \"2vw\"}} />\r\n                    </a>\r\n                    <AiOutlineMail className={\"email-icon\"} size={100} color={\"black\"} onClick={() => handleModal(true)} />\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className={\"connect-footer\"}></div>\r\n            {emailModal ? <EmailModal handleModal={handleModal} /> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst EmailModal = ({ handleModal } : {\r\n    handleModal: (val: boolean) => void;\r\n}) => {\r\n\r\n    const [emailParams, setEmailParams] = useState({\r\n        to_name: \"Jun Wei\",\r\n        from_name: \"\",\r\n        message: \"\",\r\n        email_subject: \"\",\r\n    })\r\n\r\n    const handleSubmit = async (e: any) => {\r\n        e.preventDefault();\r\n        try {\r\n            await send(\"service_u8wp726\", \"template_5eiv38f\", emailParams, \"rKIO5699VCeZXyfpe\");\r\n            handleModal(false);\r\n            setEmailParams({\r\n                to_name: \"Jun Wei\",\r\n                from_name: \"\",\r\n                message: \"\",\r\n                email_subject: \"\",\r\n            });\r\n            alert(`Email sent successfully`);\r\n        } catch (error: any) {\r\n            handleModal(false);\r\n            setEmailParams({\r\n                to_name: \"Jun Wei\",\r\n                from_name: \"\",\r\n                message: \"\",\r\n                email_subject: \"\",\r\n            });\r\n            alert(`${error} occurred. Please try again later`);\r\n\r\n        }\r\n        \r\n\r\n    };\r\n\r\n    const handleChange = (e: any) => {\r\n        setEmailParams((state) => ({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"email-modal-overlay\"} />\r\n\r\n            <form \r\n            className={\"email-modal-form\"} \r\n            onSubmit={handleSubmit}\r\n            action=\"mailto:ngjunwei2110@gmail.com\" method=\"post\" encType=\"text/plain\"\r\n            >\r\n                <ImCross className={\"cross-btn\"} size={20} color={\"white\"} onClick={() => handleModal(false)} />\r\n                <h1 className={\"email-modal-header\"} style={{ color: \"white\" }}>Send me an email!</h1>\r\n                <input className={\"email-modal-input\"} id={\"sender-email\"} name={\"from_name\"} onChange={handleChange} value={emailParams.from_name} placeholder={\"Enter your email address\"} type={\"email\"} required />\r\n                <input className={\"email-modal-input\"} id={\"email-subject\"} name={\"email_subject\"} onChange={handleChange} value={emailParams.email_subject} placeholder={\"Enter your email subject here\"} />\r\n                <textarea className={\"email-modal-input\"} id={\"email-body\"} name={\"message\"} onChange={handleChange} value={emailParams.message} placeholder={\"Enter your email here\"} />\r\n                <button type={\"submit\"} className={\"submit-btn\"}>Submit</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import LoveNest from \"./assets/images/LoveNest.png\";\r\nimport MFE from \"./assets/images/DBS_Webview.png\";\r\nimport BookingImg from \"./assets/images/automation.png\";\r\n\r\nexport const coverStory = \r\n    \"From a Chemical Engineer working in a oil refinery, Jayden's passion for Software enabled a smooth transition into the industry. \" + \r\n        \"He has performed several roles, including a Data Engineer specializing in SQL queries and data migration into Hadoop, as well as a Front-end React specialist working on trading applications. \" +\r\n            \"In his spare time, Jayden enjoys a good comic book, playing basketball and travelling.\";\r\n\r\n\r\n\r\nexport const projectArray = [{ \r\n    title: \"MicroFrontends\", \r\n    image: MFE, \r\n    desc: {\r\n        title: \"Trading WebApp\", \r\n        body: \"Build a trading platform for crypto and equities in the browser and mobile webviews\",\r\n        techStack: [\"Micro-FrontEnds\", \"React\", \"Redux\", \"TypeScript\", \"Module Federation\", \"Jest\", \"Cypress\", \"Pact\"]} }, \r\n    { title: \"Native Mobile App\", image: LoveNest, \r\n    desc: {\r\n        title: \"LoveNest - App for Couples\", \r\n        body: \"Build a native application for couples to chat, share photos and keep track of events\",\r\n        techStack: [\"React-Native\", \"TypeScript\", \"Websockets\", \"Parse\", \"NodeJS\", \"MongoDB\", \"AWS Cloud\"]} \r\n    }, \r\n    { title: \"Automation\", image: BookingImg, \r\n    desc: {\r\n        title: \"Automated Booking System\", \r\n        body: \"Build a simple cron job for users to automate their booking in ActiveSG website\",\r\n        techStack: [\"Python\", \"Web Scraping\", \"Beautiful Soup\", \"Cron Job\", \"Re-Captcha\", \"dev-tools\"]}   \r\n    }];\r\n\r\n\r\nexport const linkedinUrl = \"https://www.linkedin.com/in/jun-wei-ng-039b60105/\";\r\nexport const redditUrl = \"https://www.reddit.com/user/chickenworshipper\";\r\nexport const twitterUrl = \"https://twitter.com/NgJunWei14\";"],"names":["Connect","useState","emailModal","setEmailModal","handleModal","open","document","body","style","overflow","className","href","linkedinUrl","size","color","marginRight","redditUrl","twitterUrl","onClick","EmailModal","to_name","from_name","message","email_subject","emailParams","setEmailParams","handleSubmit","e","preventDefault","send","alert","handleChange","state","target","name","value","onSubmit","action","method","encType","id","onChange","placeholder","type","required","coverStory","projectArray","title","image","MFE","desc","techStack","LoveNest","BookingImg"],"sourceRoot":""}